type Domain @entity {
  id: ID!
  owner: Account
  domainRegistrationOrders: [DomainRegistrationOrder!]
    @derivedFrom(field: "domain")
  createdAt: DateTime
  createdAtBlock: Int
}

type Account @entity {
  id: ID!
  domains: [Domain!] @derivedFrom(field: "owner")
  domainRegistrationOrders: [DomainRegistrationOrder!]
    @derivedFrom(field: "target")

  energyBoxes: [EnergyBox!] @derivedFrom(field: "owner")
}

type DomainRegistrationOrder @entity {
  "Attempt ID from remark and it's the same value for all purchase, confirmation and refund(if it's existing) remarks"
  id: ID!
  blockHashSellerChain: String
  blockHashUnameHostChain: String
  confirmedBlockHashSellerChain: String
  confirmedRemarkCallId: String
  refundBlockHashSellerChain: String
  refundRemarkCallId: String
  target: Account!
  domain: Domain!
  price: BigInt!
  "TODO should be reviewed"
  token: String!
  purchaseTx: Transfer
  refundTx: Transfer
  status: OrderRequestStatus
  refundStatus: OrderRefundStatus
  purchaseRmrk: JSON
  confirmationRmrk: JSON
  refundRmrk: JSON
  errorRegistration: OrderError
  errorRefund: OrderError
}

type EnergyBox @entity {
  "Attempt ID from remark and it's the same value for all generation, confirmation and refund(if it's existing) remarks"
  id: ID!
  blockHashSellerChain: String
  blockHashEnergyHostChain: String
  energyAmount: BigInt!
  boxPrice: BigInt!
  "TODO should be reviewed"
  token: String!
  owner: Account
  purchaseTx: Transfer
  refundTx: Transfer
  status: OrderRequestStatus
  refundStatus: OrderRefundStatus
  generationRmrk: JSON
  confirmationRmrk: JSON
  refundRmrk: JSON
  errorGeneration: OrderError
  errorRefund: OrderError
}

type Transfer @entity {
  id: ID!
  blockHeight: Int!
  blockHash: String!
  timestamp: DateTime!
  amount: BigInt!
  token: String
  from: Account!
  to: Account!
  addressChainPrefix: String
}

enum OrderRequestStatus {
  Processing
  Successful
  Failed
}
enum OrderRefundStatus {
  None
  Waiting
  Fulfilled
  Failed
}

type OrderError {
  status: Int
  reason: String
}
